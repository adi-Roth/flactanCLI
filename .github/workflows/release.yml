name: Release Pipeline

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  release:
    if: github.event.pull_request.merged == true && (startsWith(github.event.pull_request.head.ref, 'feature/') || startsWith(github.event.pull_request.head.ref, 'fix/'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main  # Ensures it runs on `main`

      - name: Fetch latest tag
        id: get_tag
        run: |
          git fetch --tags
          echo "TAG=$(git tag --sort=-v:refname | head -n 1)" >> $GITHUB_ENV

      - name: Verify Tag
        run: echo "Latest tag is ${{ env.TAG }}"

      - name: Extract PR Description and Sanitize
        id: get_pr_body
        run: |
          # Fetch PR body and sanitize it
          echo "PR_BODY<<EOF" >> $GITHUB_ENV
          echo "${{ github.event.pull_request.body }}" | tr -d '\r' >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Get Windows Dependencies
        run: |
          GOOS=windows go get -d ./...
          go mod tidy
      
      - name: Build and Upload Artifacts
        run: |
          make build-linux
          make build-mac
          make build-windows

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: flactanCLI-artifacts
          path: bin/*.zip

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: "Release ${{ env.TAG }}"
          body: "ðŸš€ New Release: ${{ env.TAG }}\n\nChanges:\n${{ env.PR_BODY }}"
          files: bin/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
